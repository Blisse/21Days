<Application x:Class="HappyBetter.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone" xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit" xmlns:converters="clr-namespace:HappyBetter.Converters" xmlns:primitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone">
  <!--Application Resources-->
  <Application.Resources>
    <local:LocalizedStrings xmlns:local="clr-namespace:HappyBetter" x:Key="LocalizedStrings" />
    <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:HappyBetter.ViewModels" />
    <Color x:Key="ColorWhite">#E9E9E9</Color>
    <Color x:Key="ColorGray">#BCBCBC</Color>
    <Color x:Key="ColorDarkGray">#424242</Color>
    <Color x:Key="ColorBlack">#1A1A1A</Color>
    <Color x:Key="ColorFadedBlack">#333333</Color>
    <Color x:Key="ColorOrange">#FF9900</Color>
    <Color x:Key="ColorBlue">#3299BB</Color>
    <Color x:Key="ColorGreen">#25A860</Color>
    <Color x:Key="ColorFadedGreen">#C3FF68</Color>
    <Color x:Key="ColorRed">#BA3030</Color>
    <Color x:Key="ColorFadedRed">#CC5D4C</Color>
    <!--Foreground Brushes-->
    <SolidColorBrush x:Key="ForegroundWhite" Color="{StaticResource ColorWhite}" />
    <SolidColorBrush x:Key="ForegroundGray" Color="{StaticResource ColorGray}" />
    <SolidColorBrush x:Key="ForegroundDarkGray" Color="{StaticResource ColorDarkGray}" />
    <SolidColorBrush x:Key="ForegroundBlack" Color="{StaticResource ColorBlack}" />
    <SolidColorBrush x:Key="ForegroundOrange" Color="{StaticResource ColorOrange}" />
    <SolidColorBrush x:Key="ForegroundBlue" Color="{StaticResource ColorBlue}" />
    <SolidColorBrush x:Key="ForegroundGreen" Color="{StaticResource ColorGreen}" />
    <SolidColorBrush x:Key="ForegroundRed" Color="{StaticResource ColorRed}" />
    <!--Background Brushes-->
    <SolidColorBrush x:Key="BackgroundWhite" Color="{StaticResource ColorWhite}" />
    <SolidColorBrush x:Key="BackgroundBlack" Color="{StaticResource ColorFadedBlack}" />
    <SolidColorBrush x:Key="BackgroundGray" Color="{StaticResource ColorDarkGray}" />
    <SolidColorBrush x:Key="BackgroundBlue" Color="{StaticResource ColorBlue}" />
    <SolidColorBrush x:Key="BackgroundGreen" Color="{StaticResource ColorGreen}" />
    <SolidColorBrush x:Key="BackgroundRed" Color="{StaticResource ColorFadedRed}" />
    <SolidColorBrush x:Key="ApplicationBackgroundColor" Color="{StaticResource ColorBlack}" />
    <FontFamily x:Key="OpenSans">/Assets/Fonts/OpenSans-Regular.ttf#Open Sans</FontFamily>
    <FontFamily x:Key="OpenSansBold">/Assets/Fonts/OpenSans-Bold.ttf#Open Sans</FontFamily>
    <converters:DateStringToStringConverter x:Key="DateStringToStringConverter" />
    <converters:ObjectToBooleanConverter x:Key="ObjectToBooleanConverter" />
    <converters:EntryItemTextToBackgroundColorConverter x:Key="EntryItemTextToBackgroundColorConverter" />
    <converters:BooleanToEntryHeaderColorConverter x:Key="DailyEntryToEntryHeaderColorConverter" />
    <converters:MainPageDateTimeToBackgroundColorConverter x:Key="MainPageDateTimeToBackgroundColorConverter" />
    <converters:StatusIsTodayCompletedBooleanToStringConverter x:Key="StatusIsTodayCompletedBooleanToStringConverter" />
    <converters:StatusIsTodayCompletedToForegroundColorConverter x:Key="StatusIsTodayCompletedToForegroundColorConverter" />
    <converters:StatusConsecCompletedToForegroundColorConverter x:Key="StatusConsecCompletedToForegroundColorConverter" />
    <converters:StatusNumberOfEntriesToForegroundColorConverter x:Key="StatusNumberOfEntriesToForegroundColorConverter" />
    <converters:TextCaseConverter x:Key="TextCaseConverter" />
    <Style x:Key="ButtonTiltEffectEnabledStyle" TargetType="Button">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <Grid>
              <ContentPresenter />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="toolkit:TiltEffect.IsTiltEnabled" Value="True" />
    </Style>
    <Style x:Key="ThemedTextBoxStyle" TargetType="TextBox">
      <Setter Property="FontFamily" Value="{StaticResource OpenSans}" />
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}" />
      <Setter Property="Background" Value="{StaticResource BackgroundWhite}" />
      <Setter Property="Foreground" Value="{StaticResource ForegroundBlack}" />
      <Setter Property="BorderBrush" Value="{StaticResource PhoneTextBoxBrush}" />
      <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}" />
      <Setter Property="TextWrapping" Value="Wrap" />
      <Setter Property="AcceptsReturn" Value="True" />
      <Setter Property="InputScope" Value="Text" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="TextBox">
            <Grid Background="Transparent">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="MouseOver" />
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="MainBorder">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="MainBorder">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="ReadOnly">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MainBorder">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ReadonlyBorder">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ReadonlyBorder">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ReadonlyBorder">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneTextBoxReadOnlyBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="MainBorder">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackgroundWhite}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="MainBorder">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundWhite}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{StaticResource PhoneTouchTargetOverhang}" />
              <Border x:Name="ReadonlyBorder" BorderBrush="{StaticResource PhoneDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Margin="{StaticResource PhoneTouchTargetOverhang}" Visibility="Collapsed" />
              <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Margin="{StaticResource PhoneTouchTargetOverhang}">
                <ContentControl x:Name="ContentElement" BorderThickness="0" HorizontalContentAlignment="Stretch" Margin="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Stretch" />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="toolkit:ExpanderView">
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <StackPanel />
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="toolkit:ExpanderView">
            <Grid>
              <Grid.Resources>
                <QuadraticEase x:Key="QuadraticEaseOut" EasingMode="EaseOut" />
                <QuadraticEase x:Key="QuadraticEaseInOut" EasingMode="EaseInOut" />
              </Grid.Resources>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ExpansionStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition From="Collapsed" GeneratedDuration="0:0:0.15" To="Expanded">
                      <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas">
                          <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}" KeyTime="0:0:0.00" Value="0" />
                          <EasingDoubleKeyFrame x:Name="CollapsedToExpandedKeyFrame" EasingFunction="{StaticResource QuadraticEaseOut}" KeyTime="0:0:0.15" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas" />
                      </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="Expanded" GeneratedDuration="0:0:0.15" To="Collapsed">
                      <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas">
                          <EasingDoubleKeyFrame x:Name="ExpandedToCollapsedKeyFrame" EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="1" />
                          <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas">
                          <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="1.0" />
                          <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="0.0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ItemsCanvas">
                          <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="0.0" />
                          <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="-35" />
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualTransition>
                  </VisualStateGroup.Transitions>
                  <VisualState x:Name="Collapsed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas" />
                      <DoubleAnimation Duration="0" To="0.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas" />
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Expanded">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas" />
                      <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandabilityStates">
                  <VisualState x:Name="Expandable" />
                  <VisualState x:Name="NonExpandable">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandableContent">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Line">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NonExpandableContent">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ListBoxItem x:Name="ExpandableContent" Grid.ColumnSpan="2" Grid.Column="0" toolkit:TiltEffect.IsTiltEnabled="True" Grid.Row="0" Grid.RowSpan="2">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="41" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <ContentControl x:Name="Header" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Row="0" />
                  <ContentControl x:Name="Expander" ContentTemplate="{TemplateBinding ExpanderTemplate}" Content="{TemplateBinding Expander}" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="4,0,0,0" Grid.Row="1" />
                  <Grid x:Name="ExpanderPanel" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" />
                </Grid>
              </ListBoxItem>
              <ContentControl x:Name="NonExpandableContent" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding NonExpandableHeaderTemplate}" Content="{TemplateBinding NonExpandableHeader}" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed" />
              <Canvas x:Name="ItemsCanvas" Grid.Column="1" Margin="0,0,0,0" Opacity="0.0" Grid.Row="2">
                <Canvas.RenderTransform>
                  <CompositeTransform TranslateY="0.0" />
                </Canvas.RenderTransform>
                <ItemsPresenter x:Name="Presenter" />
              </Canvas>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="LightGrayPivotHeaderStyle" TargetType="primitives:PivotHeaderItem">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Padding" Value="0,0,8,5" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="primitives:PivotHeaderItem">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                  <VisualState x:Name="Unselected" />
                  <VisualState x:Name="Selected">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="contentPresenter">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundWhite}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ColorAnimation Duration="0" To="{StaticResource PhoneAccentColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ContentControl x:Name="contentPresenter" FontSize="48" FontFamily="{StaticResource OpenSansBold}" Foreground="{StaticResource ForegroundDarkGray}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" FontWeight="Bold" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="LightGrayPivotStyle" TargetType="phone:Pivot">
      <Setter Property="Margin" Value="0" />
      <Setter Property="Padding" Value="0" />
      <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <Grid />
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="phone:Pivot">
            <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid Background="{TemplateBinding Background}" Grid.RowSpan="3" />
              <ContentControl ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" HorizontalAlignment="Left" Margin="0,17,0,-7" Style="{StaticResource PivotTitleStyle}" />
              <primitives:PivotHeadersControl x:Name="HeadersListElement" Grid.Row="1" Margin="0,0,0,-25" ItemContainerStyle="{StaticResource LightGrayPivotHeaderStyle}" />
              <ItemsPresenter x:Name="PivotItemPresenter" Margin="{TemplateBinding Padding}" Grid.Row="2" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="PhoneButtonBase" TargetType="ButtonBase">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}" />
      <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
      <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}" />
      <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}" />
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
      <Setter Property="Padding" Value="10,5,10,6" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ButtonBase">
            <Grid Background="Transparent">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="MouseOver" />
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}">
                <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="PhoneRadioButtonCheckBoxBase" BasedOn="{StaticResource PhoneButtonBase}" TargetType="ToggleButton">
      <Setter Property="Background" Value="{StaticResource PhoneRadioCheckBoxBrush}" />
      <Setter Property="BorderBrush" Value="{StaticResource PhoneRadioCheckBoxBorderBrush}" />
      <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}" />
      <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}" />
      <Setter Property="HorizontalContentAlignment" Value="Left" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="0" />
    </Style>
    <Style x:Key="EntryPivotCheckBoxStyle" BasedOn="{StaticResource PhoneRadioButtonCheckBoxBase}" TargetType="CheckBox">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="CheckBox">
            <Grid Background="Transparent" HorizontalAlignment="Left">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="MouseOver" />
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckBackground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxPressedBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckBackground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckMark">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked" />
                  <VisualState x:Name="Indeterminate">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IndeterminateMark">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid Margin="{StaticResource PhoneTouchTargetLargeOverhang}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="32" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" VerticalAlignment="Top">
                  <Border x:Name="CheckBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource PhoneBorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Left" Height="32" IsHitTestVisible="False" VerticalAlignment="Center" Width="32" />
                  <Rectangle x:Name="IndeterminateMark" Fill="{StaticResource PhoneRadioCheckBoxCheckBrush}" HorizontalAlignment="Center" Height="16" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Width="16" />
                  <Path x:Name="CheckMark" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{StaticResource PhoneRadioCheckBoxCheckBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="21" IsHitTestVisible="False" Stretch="Fill" StrokeThickness="3" StrokeLineJoin="Round" Visibility="Collapsed" VerticalAlignment="Center" Width="23" />
                </Grid>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="InfoDescriptionStyle" TargetType="TextBlock">
      <Setter Property="FontSize" Value="20" />
      <Setter Property="FontFamily" Value="{StaticResource OpenSans}" />
      <Setter Property="Foreground" Value="{StaticResource ForegroundGray}" />
      <Setter Property="TextWrapping" Value="Wrap" />
      <Setter Property="Margin" Value="0,0,0,16" />
    </Style>
    <Style x:Key="InfoBoldedStyle" TargetType="Run">
      <Setter Property="FontSize" Value="20" />
      <Setter Property="FontWeight" Value="Bold" />
      <Setter Property="Foreground" Value="{StaticResource ForegroundBlue}" />
    </Style>
        <Style x:Key="PivotItemStyle" TargetType="phone:PivotItem">
            <Setter Property="Margin" Value="0,28,0,0" />
        </Style>
    </Application.Resources>
  <Application.ApplicationLifetimeObjects>
    <!--Required object that handles lifetime events for the application-->
    <shell:PhoneApplicationService Launching="Application_Launching" Closing="Application_Closing" Activated="Application_Activated" Deactivated="Application_Deactivated" />
  </Application.ApplicationLifetimeObjects>
</Application>